"use client"

import { useState, useEffect } from "react"
import { Clock, BookOpen } from "lucide-react"
import { useRouter } from "next/navigation"
import Image from 'next/image'
import DownloadTracker from '@/lib/downloadTracker'

interface Lesson {
  id: string
  title: string
  description: string
  duration: string
  slides: any[]
}

interface LessonsData {
  lessons: Lesson[]
}

export default function MainMenu() {
  const [lessons] = useState<LessonsData>(() => {
    // This would normally come from an API or file
    // For now, we'll import it directly
    const lessonsData = require('@/slides.json')
    return lessonsData
  })
  
  const [downloadedLessons, setDownloadedLessons] = useState<Set<string>>(new Set())
  const router = useRouter()

  // Load download status on component mount
  useEffect(() => {
    const downloadRecords = DownloadTracker.getDownloadedLessons()
    const downloadedIds = new Set(downloadRecords.map(record => record.lessonId))
    setDownloadedLessons(downloadedIds)
  }, [])

  const startLesson = (lessonId: string) => {
    router.push(`/lesson/${lessonId}`)
  }

  return (
    <div className="min-h-screen bg-white">
      {/* Header */}
      <header className="border-b border-gray-100">
        <div className="max-w-6xl mx-auto px-6 py-8">
          <div className="flex justify-between items-center">
            <div className="flex items-center">
              <Image 
                src="/logos/ecampus_logo.png" 
                alt="eCampus Università" 
                width={180} 
                height={72}
                className="h-12 w-auto"
              />
            </div>
            <div className="flex items-center">
              <Image 
                src="/logos/generated_by_teachforge.png" 
                alt="Generated by TeachForge.Net" 
                width={200} 
                height={58}
                className="h-10 w-auto"
              />
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-6xl mx-auto px-6 py-16">
        <div className="text-center mb-16">
          <h1 className="text-3xl font-medium text-gray-900 mb-3">
            Programming Lessons
          </h1>
          <p className="text-gray-500 max-w-2xl mx-auto">
            Interactive courses designed for modern learning
          </p>
        </div>

        {/* Lessons Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {lessons.lessons.map((lesson) => {
            const isDownloaded = downloadedLessons.has(lesson.id)
            const downloadInfo = DownloadTracker.getDownloadInfo(lesson.id)
            
            return (
              <div 
                key={lesson.id} 
                className="group border border-gray-200 rounded-lg p-6 hover:border-gray-300 hover:shadow-sm transition-all duration-200 cursor-pointer"
                onClick={() => startLesson(lesson.id)}
              >
                {/* Header */}
                <div className="flex items-start justify-between mb-4">
                  <div className="flex-1">
                    <h3 className="text-lg font-medium text-gray-900 mb-1 group-hover:text-gray-700">
                      {lesson.title}
                    </h3>
                    <p className="text-sm text-gray-500 leading-relaxed">
                      {lesson.description}
                    </p>
                  </div>
                  
                  {/* Download indicator */}
                  {isDownloaded && (
                    <div className="ml-4 flex-shrink-0">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                    </div>
                  )}
                </div>
                
                {/* Footer */}
                <div className="flex items-center justify-between text-sm text-gray-400">
                  <div className="flex items-center gap-4">
                    <span className="flex items-center gap-1">
                      <BookOpen className="h-3 w-3" />
                      {lesson.slides.length} slides
                    </span>
                    <span className="flex items-center gap-1">
                      <Clock className="h-3 w-3" />
                      {lesson.duration}
                    </span>
                  </div>
                  
                  {/* Download info */}
                  {isDownloaded && downloadInfo && (
                    <span className="text-xs">
                      {new Date(downloadInfo.downloadDate).toLocaleDateString()}
                    </span>
                  )}
                </div>
              </div>
            )
          })}
        </div>

        {/* Footer */}
        <footer className="mt-24 pt-8 border-t border-gray-100">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-6">
              <Image 
                src="/logos/ecampus_footer_logo.png" 
                alt="eCampus" 
                width={60} 
                height={60}
                className="h-12 w-12"
              />
              <div>
                <p className="text-sm text-gray-600">Lingua e traduzione inglese</p>
                <p className="text-xs text-gray-400">L-LIN/12 • 9 CFU</p>
              </div>
            </div>
            <div className="text-right">
              <p className="text-xs text-gray-400">Powered by TeachForge</p>
            </div>
          </div>
        </footer>
      </main>
    </div>
  )
}